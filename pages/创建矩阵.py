import streamlit as st

st.markdown("## 矩阵的创建和基本运算")

st.sidebar.markdown("### 创建矩阵")

st.caption("Numpy库就是基于数组来运算的，正是因为这个，使得Python做数值计算的速度非常快。所谓数组，在代数运算中就可以理解为矩阵。一般而言，我们的矩阵是一个二维的，由行列指标组成的。")

st.write("Numpy的数组不仅仅支持二维的数组，还可以创建更高维度的数组，比如三维的图像数据就是使用三维数组来存储的。下面提到的矩阵，不加一般说明，就是指二维数组。")

st.write("学会使用Python做矩阵计算的前提是创建矩阵，下面就给出几种不同创建矩阵的方式。")

st.markdown("""
- 创建向量，再重构行列数，得到二维的数组。使用二维列表创建矩阵。
- 通过特殊函数创建特殊矩阵。""")

st.markdown("上面所提到的向量，不会区分行向量还是列向量，可以理解为一行元素或者一列元素。原因有二：其一，向量不参与代数运算时，作出区分是无意义的。其二，代数运算中，向量可以直接与矩阵作运算的，但是在Python程序中是不可以的，必须是矩阵与矩阵之间作运算，也就是说，要将向量“显示地”转化为1行$n$列或者$n$行一列的矩阵。如何“显示地”转换，就是对它进行行列数重构。")

st.sidebar.markdown("#### 创建向量")

st.sidebar.markdown("##### 列表元组创建向量")
st.sidebar.markdown("##### 特殊函数创建向量")

st.sidebar.markdown("#### 向量重构数组")

st.sidebar.markdown("#### 二维列表创建矩阵")

st.sidebar.markdown("#### 特殊函数创建矩阵")

st.sidebar.markdown("#### 单位阵")
